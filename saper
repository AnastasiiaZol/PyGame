import pygame
import random
import sys

pygame.init()
clock = pygame.time.Clock()

def saper(count_bombs):
    free_box = [[x, y] for y in range(0, 16) for x in range(0, 16)] #список свободных полей
    coordinat = [] #список для координат бомб
    for x in range(count_bombs): #заполняем список бомбами
        rand_element = random.choice(free_box)
        coordinat.append(rand_element)
        free_box.remove(rand_element)
    count_bombs = bombs
    koord_bomb = [[0 for _ in range(stolb)] for _ in range(stroki)] #координаты бомб
    m_kletki = [[0 for _ in range(stolb)] for _ in range(stroki)] #закрытые или открытые клетки
    m_test = [[0 for _ in range(stolb)] for _ in range(stroki)] #клетки не рядом с бомбами
    timer = False
    second = "000" #начальное значение часов
    for y in coordinat: #заполняем бомбы
        koord_bomb[int(y[0])][int(y[1])] = 9

    for i in range(stroki): #расставление цифр вокруг бомб
        for j in range(stolb):
            if koord_bomb[i][j] == 0:
                for x in range(i - 1, i + 2):
                    for y in range(j - 1, j + 2):
                        if 0 <= x < stroki and 0 <= y < stolb and koord_bomb[x][y] == 9:
                            koord_bomb[i][j] += 1
    for y in range(16): #цифра = картинка
        for x in range(16):
            if koord_bomb[y][x] == 0:
                picture = "d0.png"
            elif koord_bomb[y][x] == 1:
                picture = "d1.png"
            elif koord_bomb[y][x] == 2:
                picture = "d2.png"
            elif koord_bomb[y][x] == 3:
                picture = "d3.png"
            elif koord_bomb[y][x] == 4:
                picture = "d4.png"
            elif koord_bomb[y][x] == 5:
                picture = "d5.png"
            elif koord_bomb[y][x] == 6:
                picture = "d6.png"
            elif koord_bomb[y][x] == 7:
                picture = "d7.png"
            elif koord_bomb[y][x] == 8:
                picture = "d8.png"
            elif koord_bomb[y][x] == 9:
                picture = "bomb.png"
            sign.add(Sign((x * 35 + 23, y * 35 + 120), picture))
    for y in range(16): #заполняем пустые клетки
        for x in range(16):
            kletka.add(Kletka((x * 35 + 23, y * 35 + 120), "kletka.png", 0))
    btn1.win = 1
    return m_kletki, koord_bomb, m_test, count_bombs, timer, second
            
class Kletka(pygame.sprite.Sprite): #спрайты, покрывающие поле поверх цифр
    def __init__(self, coord, picture, state):
        super().__init__()
        self.image = pygame.image.load(picture).convert()
        self.rect = self.image.get_rect(topleft=coord)
        self.state = state


class Sign(pygame.sprite.Sprite): #спрайты цифр и бомб
    def __init__(self, coord, picture):
        super().__init__()
        self.image = pygame.image.load(picture).convert()
        self.rect = self.image.get_rect(topleft=coord)


class Smile(pygame.sprite.Sprite): #кнопка обновления игры
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("btn_start.png").convert()
        self.rect = self.image.get_rect(center=(300, 60))
        self.state = 0
        self.win = 1


class Chet(pygame.sprite.Sprite): #спрайты для счётчика
    def __init__(self, x, y):
        super().__init__()
        self.long_image = pygame.image.load("clock.png").convert()
        self.image = pygame.Surface((28, 50))
        self.rect = self.image.get_rect(topleft=(x, y))

    def update_chet(self, number): #вырезания определённой цифры из большого файла
        if number == "0":
            self.image.blit(self.long_image, (0, 0), (28, 0, 28, 50))
        elif number == "1":
            self.image.blit(self.long_image, (0, 0), (56, 0, 28, 50))
        elif number == "2":
            self.image.blit(self.long_image, (0, 0), (84, 0, 28, 50))
        elif number == "3":
            self.image.blit(self.long_image, (0, 0), (112, 0, 28, 50))
        elif number == "4":
            self.image.blit(self.long_image, (0, 0), (140, 0, 28, 50))
        elif number == "5":
            self.image.blit(self.long_image, (0, 0), (168, 0, 28, 50))
        elif number == "6":
            self.image.blit(self.long_image, (0, 0), (196, 0, 28, 50))
        elif number == "7":
            self.image.blit(self.long_image, (0, 0), (224, 0, 28, 50))
        elif number == "8":
            self.image.blit(self.long_image, (0, 0), (252, 0, 28, 50))
        elif number == "9":
            self.image.blit(self.long_image, (0, 0), (280, 0, 28, 50))
        elif number == "-":
            self.image.blit(self.long_image, (0, 0), (0, 0, 28, 50))


window = pygame.display.set_mode((607, 704))
pygame.display.set_caption("Сапёр")
kletka = pygame.sprite.Group() #класс для квадратов закрывающие цифры
sign = pygame.sprite.Group() #класс для изображений цифр и бомб
background = pygame.image.load("pole.png").convert()
btn1 = Smile() #создаём кнопку смайл
stroki = 16 #количество строк
stolb = 16 #количество столбцов
bombs = 40 #количество бомб

count_bombs = bombs
str_bomb = str(bombs).zfill(3) #добавляем к строке недостающие нули
press = False #нажатие левой кнопки
timer = False #запуск часов
second = "000"
close_kletka = 256 #количество закрытых клеток
chet_1 = Chet(33, 34) #создания объектов для вывода цифр в счётчиках
chet_2 = Chet(61, 34)
chet_3 = Chet(89, 34)
clock1 = Chet(490, 34)
clock2 = Chet(518, 34)
clock3 = Chet(546, 34)
m_kletki, koord_bomb, m_test, count_bombs, timer, second = saper(count_bombs) #запуск новой игры

while True:
    for i in pygame.event.get():
        if i.type == pygame.QUIT: #нажатие на закрытое окно
            pygame.quit()
            sys.exit()
        if i.type == pygame.MOUSEMOTION: #если двигаем мышку
            if btn1.state == 1 and not (btn1.rect.collidepoint(pygame.mouse.get_pos())) and btn1.win == 1:#если идёт игра, курсор не попал на кнопку смайл и она была нажата
                btn1.state = 0
                btn1.image = pygame.image.load("btn_start.png").convert()
            elif btn1.state == 1 and not (btn1.rect.collidepoint(pygame.mouse.get_pos())) and btn1.win == 2 and \
                    press == True:#она была нажата, курсор не попал на кнопку смайл, мы выиграли, левая кнопка мыши нажата
                btn1.state = 3
                btn1.image = pygame.image.load("btn_win.png").convert()
            elif btn1.state == 1 and not (btn1.rect.collidepoint(pygame.mouse.get_pos())) and btn1.win == 0:#она нажата, курсор не попал на кнопку смайл и мы проиграли
                btn1.state = 2
                btn1.image = pygame.image.load("btn_end.png").convert()
            elif btn1.state == 2 and btn1.rect.collidepoint(pygame.mouse.get_pos()) and btn1.win == 0 and press == True:#если он с крестиками, курсор попал на кнопку смайл, мы проиграли, левая кнопка нажата
                btn1.state = 1
                btn1.image=pygame.image.load("btn_start.png").convert()
            elif btn1.state == 3 and btn1.rect.collidepoint(pygame.mouse.get_pos()) and btn1.win == 2 and press == True:#если смайл с очками, курсор попал на кнопку, мы выиграли, левая кнопка нажата
                btn1.state = 1
                btn1.image = pygame.image.load("btn_start.png").convert()
                
        if i.type == pygame.MOUSEBUTTONUP:
            press = False
            if i.button == pygame.BUTTON_LEFT:#отжатие левой кнопки
                if btn1.rect.collidepoint(pygame.mouse.get_pos()):#нажатие на смайл
                    if btn1.state == 1:
                        m_kletki, koord_bomb, m_test, count_bombs, timer, second = saper(count_bombs) #начать новую игру
                    btn1.state = 0 #кнопка со смайлом
                    btn1.image = pygame.image.load("btn_start.png").convert()
            if btn1.state == 1 and btn1.rect.collidepoint(pygame.mouse.get_pos()) and btn1.win == 0: #если она нажата, курсор на кнопке и мы проиграли
                btn1.state = 0
                btn1.image = pygame.image.load("btn_start.png").convert()
                m_kletki, koord_bomb, m_test, count_bombs, timer, second = new_game(count_bombs) #начать новую игру
                
        if i.type == pygame.MOUSEBUTTONDOWN:
            if i.button == pygame.BUTTON_RIGHT:
                if btn1.win == 1 and 23 < pygame.mouse.get_pos()[0] < 583 and 120 < pygame.mouse.get_pos()[1] < 680: #если идёт игра, кликнули по клетке
                    coord = (pygame.mouse.get_pos()[1] - 120) // 35, (pygame.mouse.get_pos()[0] - 23) // 35 #ловим координаты нажатия
                    if m_kletki[(pygame.mouse.get_pos()[1] - 120) // 35][(pygame.mouse.get_pos()[0] - 23) // 35] == 0: #если она закрыта
                        for kl in kletka: #уничтожаем серую клетку, ставим новую с флагом или вопросом
                            if kl.rect.collidepoint(pygame.mouse.get_pos()):
                                state = kl.state
                                kl.kill()
                        if state == 0:
                            kletka.add(Kletka((coord[1] * 35 + 23, coord[0] * 35 + 120), "flag.png", 1)) #ставим флаг
                            count_bombs -= 1

            if i.button == pygame.BUTTON_LEFT: #нажатие левой кнопки мыши
                press = True
                if btn1.win == 1:
                    if btn1.rect.collidepoint(pygame.mouse.get_pos()): #если попали по большой кнопке
                        btn1.state = 1
                    for kl in kletka:
                        if kl.rect.collidepoint(pygame.mouse.get_pos()): #если попали по клетке
                            if timer == False:
                                start = pygame.time.get_ticks()
                            timer = True
                            if kl.state == 0:
                                m_kletki[(pygame.mouse.get_pos()[1] - 120) // 35][(pygame.mouse.get_pos()[0] - 23)
                                                                                  // 35] = 1 #говорим, что она открыта
                                if koord_bomb[(pygame.mouse.get_pos()[1] - 120) // 35][(pygame.mouse.get_pos()[0] - 23)
                                                                                       // 35] == 0: #если стоит ноль, открываем соседние поля
                                    coord = (pygame.mouse.get_pos()[1] - 120) // 35, (pygame.mouse.get_pos()[0] - 23) // 35
                                    for i in range(coord[0] - 1, coord[0] + 2):
                                        for j in range(coord[1] - 1, coord[1] + 2):
                                            for kl in kletka:
                                                if kl.rect.topleft == (j * 35 + 23, i * 35 + 120):
                                                    kl.kill()
                                            if 0 <= i < 16 and 0 <= j < 16:
                                                m_kletki[i][j] = 1
                                    m_test[coord[0]][coord[1]] = 1
                                    pusto = True
                                    while pusto: #поиск ближайших пустых полей
                                        pusto = False
                                        for i in range(stroki):
                                            for j in range(stolb):
                                                if m_kletki[i][j] == 1 and koord_bomb[i][j] == 0 and \
                                                        m_test[i][j] == 0:
                                                    pusto = True
                                                    for m in range(i - 1, i + 2):
                                                        for n in range(j - 1, j + 2):
                                                            for kl in kletka:
                                                                if kl.rect.topleft == (n * 35 + 23, m * 35 + 120):
                                                                    kl.kill()
                                                            if 0 <= m < 16 and 0 <= n < 16:
                                                                m_kletki[m][n] = 1
                                                                m_test[i][j] = 1

                                    sflag = 0
                                    for x in kletka: #подсчёт установленных флагов
                                        if x.state == 1:
                                            sflag += 1
                                    count_bombs = bombs - sflag
                                elif koord_bomb[(pygame.mouse.get_pos()[1] - 120) // 35][(pygame.mouse.get_pos()[0]
                                                                                          - 23) // 35]==9:
                                    btn1.image = pygame.image.load("btn_end.png").convert()
                                    btn1.state = 2
                                    btn1.win = 0
                                    timer = False
                                    for x in sign: #меняем открытую бомбу на "красную"
                                        if x.rect.collidepoint(pygame.mouse.get_pos()):
                                            bomb_rect = x.rect[0], x.rect[1]
                                            x.kill()
                                            sign.add(Sign((bomb_rect), "bomb_end.png"))
                                    for i in range(stroki): #открываем все бомбы
                                        for j in range(stolb):
                                            if koord_bomb[i][j] == 9:
                                                for x in kletka:
                                                    if x.rect[:2] == [j * 35 + 23, i * 35 + 120]:
                                                        x.kill()
                                if btn1.win == 1:
                                    summa = 0
                                    for i in m_kletki:
                                        summa += i.count(0) #количество закрытых клеток
                                    if summa == bombs:
                                        btn1.image = pygame.image.load("btn_win.png").convert()
                                        btn1.win = 2
                                        btn1.state = 3
                                        timer = False
                                for kl in kletka:
                                    if kl.rect.collidepoint(pygame.mouse.get_pos()):
                                        kl.kill()
                else:
                    if btn1.rect.collidepoint(pygame.mouse.get_pos()): #если попали по большой кнопке
                        btn1.image = pygame.image.load("btn_start.png").convert()
                        btn1.state = 1
    if timer:
        second=str((pygame.time.get_ticks() - start)//1000).zfill(3) #получаем время в виде строки с начальными нулями
    window.blit(background, (0, 0))
    sign.draw(window)
    kletka.draw(window)
    window.blit(btn1.image, btn1.rect)
    str_bomb = str(count_bombs).zfill(3)
    clock1.update_chet(second[-3:-2]) #расчёт времени
    clock2.update_chet(second[-2:-1])
    clock3.update_chet(second[-1:])
    chet_1.update_chet(str_bomb[:1]) #расчёт бомб
    chet_2.update_chet(str_bomb[1:2])
    chet_3.update_chet(str_bomb[2:])
    window.blit(chet_1.image, chet_1.rect) #вывод на экран бомб и часов
    window.blit(chet_2.image, chet_2.rect)
    window.blit(chet_3.image, chet_3.rect)
    window.blit(clock1.image, clock1.rect)
    window.blit(clock2.image, clock2.rect)
    window.blit(clock3.image, clock3.rect)
    pygame.display.update()
    clock.tick(50)
